<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on xenocidewiki&#39;s blog</title>
    <link>https://xenocide.wiki/posts/</link>
    <description>Recent content in Posts on xenocidewiki&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© xenocide.wiki</copyright>
    <lastBuildDate>Mon, 04 Jan 2021 01:25:00 +0100</lastBuildDate>
    
	<atom:link href="https://xenocide.wiki/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IceCTF 2020 | Hydrogen Bomb Writeup</title>
      <link>https://xenocide.wiki/posts/icectf-hydrogen-bomb/</link>
      <pubDate>Mon, 04 Jan 2021 01:25:00 +0100</pubDate>
      
      <guid>https://xenocide.wiki/posts/icectf-hydrogen-bomb/</guid>
      <description>Intro We are given a binary called bomb which is a billion functions taking input, where the goal is to find a sequence of inputs that gets us to a function called defuse which prints the flag.
We will embark on a journey that fried my brain and left me with two(!) out of the three braincells I already had remaining.
In order to get to defuse, we need to pass the following check:</description>
    </item>
    
    <item>
      <title>X-Mas CTF 2019 | Kernel Crackme Writeup</title>
      <link>https://xenocide.wiki/posts/xmas-ctf-kernel-crackme-writeup/</link>
      <pubDate>Wed, 05 Feb 2020 02:15:00 +0000</pubDate>
      
      <guid>https://xenocide.wiki/posts/xmas-ctf-kernel-crackme-writeup/</guid>
      <description>For this challenge we are provided with two files, &amp;ldquo;challenge.exe&amp;rdquo; and &amp;ldquo;X-MAS_kernel_crackme.sys&amp;rdquo;.
I first looked at challenge.exe, but nothing particularly interesting is happening in there. It simply creates a service which is used to load the driver, asks for a license key, and then communicates with the driver making it do most of the work.
Looking at the image above it is evident that challenge.exe reads in a license key (I suppose this will be the flag), then sends it off to the driver using WriteFile, and we can guess that after the driver has done its work, challenge.</description>
    </item>
    
  </channel>
</rss>